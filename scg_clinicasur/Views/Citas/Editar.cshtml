@model scg_clinicasur.Models.Cita

@{
    ViewData["Title"] = "Editar Cita";
}

<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="display-5 fw-bold text-primary">@ViewData["Title"]</h1>
        <p class="lead text-muted">Actualiza la información de la cita seleccionada.</p>
    </div>

    <!-- Mensajes de error y éxito -->
    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewBag.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Formulario de edición -->
    <div class="card shadow-lg border-0">
        <div class="card-body p-4">
            <form method="post" asp-action="Editar">
                <input type="hidden" asp-for="IdCita" />

                <!-- Seleccionar Paciente -->
                <div class="mb-3">
                    <label for="IdPaciente" class="form-label fw-bold">Paciente</label>
                    <select asp-for="IdPaciente" class="form-select">
                        <option value="">Seleccionar Paciente</option>
                        @foreach (var paciente in ViewBag.Pacientes)
                        {
                            <option value="@paciente.id_usuario" selected="@(Model.IdPaciente == paciente.id_usuario)">
                                @paciente.nombre @paciente.apellido
                            </option>
                        }
                    </select>
                    <span asp-validation-for="IdPaciente" class="text-danger"></span>
                </div>

                <!-- Seleccionar Doctor -->
                <div class="mb-3">
                    <label for="IdDoctor" class="form-label fw-bold">Doctor</label>
                    <select asp-for="IdDoctor" id="doctorSelect" class="form-select">
                        <option value="">Seleccionar Doctor</option>
                        @foreach (var doctor in ViewBag.Doctores)
                        {
                            <option value="@doctor.id_usuario" selected="@(Model.IdDoctor == doctor.id_usuario)">
                                @doctor.nombre @doctor.apellido
                            </option>
                        }
                    </select>
                    <span asp-validation-for="IdDoctor" class="text-danger"></span>
                </div>

                <!-- Fecha de Cita -->
                <div class="mb-3">
                    <label for="fechaCita" class="form-label fw-bold">Fecha de la Cita</label>
                    <input type="date" id="fechaCita" class="form-control"
                           value="@Model.FechaInicio.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                </div>

                <!-- Horas Disponibles -->
                <div class="mb-3">
                    <label class="form-label fw-bold">Horas Disponibles</label>
                    <div id="horasContainer" class="d-flex flex-wrap gap-2"></div>
                    <input type="hidden" id="FechaInicio" name="FechaInicio" value="@Model.FechaInicio.ToString("yyyy-MM-ddTHH:mm")" />
                    <input type="hidden" id="FechaFin" name="FechaFin" value="@Model.FechaFin.ToString("yyyy-MM-ddTHH:mm")" />
                </div>

                <!-- Motivo de la Cita -->
                <div class="mb-3">
                    <label for="MotivoCita" class="form-label fw-bold">Motivo de la Cita</label>
                    <input type="text" asp-for="MotivoCita" class="form-control" />
                    <span asp-validation-for="MotivoCita" class="text-danger"></span>
                </div>

                <!-- Estado de la Cita -->
                <div class="mb-3">
                    <label for="IdEstadoCita" class="form-label fw-bold">Estado de la Cita</label>
                    <select asp-for="IdEstadoCita" asp-items="ViewBag.EstadosCita" class="form-select"></select>
                    <span asp-validation-for="IdEstadoCita" class="text-danger"></span>
                </div>

                <!-- Botones -->
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-success me-2">
                        <i class="bi bi-check-circle"></i> Guardar Cambios
                    </button>
                    <a asp-action="Citas" class="btn btn-secondary">
                        <i class="bi bi-arrow-left-circle"></i> Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Script para cargar horas disponibles y marcar la seleccionada -->
<script>
    document.getElementById('doctorSelect').addEventListener('change', cargarHorasDisponibles);
    document.getElementById('fechaCita').addEventListener('change', cargarHorasDisponibles);

    function cargarHorasDisponibles() {
        var idDoctor = document.getElementById('doctorSelect').value;
        var fecha = document.getElementById('fechaCita').value;

        if (idDoctor && fecha) {
            fetch(`/Citas/ObtenerHorasDisponibles?idDoctor=${idDoctor}&fecha=${fecha}`)
                .then(response => response.json())
                .then(data => {
                    var horasContainer = document.getElementById('horasContainer');
                    horasContainer.innerHTML = '';
                    var horaSeleccionada = document.getElementById('FechaInicio').value.split('T')[1]; // Obtener hora seleccionada

                    data.forEach(hora => {
                        var horaBtn = document.createElement('button');
                        horaBtn.classList.add('hora-bloque', 'btn', 'btn-sm');
                        horaBtn.innerText = `${hora.horaInicio} - ${hora.horaFin}`;
                        horaBtn.type = 'button';

                        if (hora.ocupada) {
                            horaBtn.classList.add('btn-secondary', 'disabled');
                        } else {
                            horaBtn.classList.add('btn-outline-success');
                            horaBtn.onclick = function () {
                                // Actualizar el campo oculto FechaInicio con la fecha y hora seleccionada
                                document.getElementById('FechaInicio').value = `${fecha}T${hora.horaInicio}`;
                                document.getElementById('FechaFin').value = `${fecha}T${hora.horaFin}`;
                                document.querySelectorAll('.hora-bloque').forEach(b => b.classList.remove('btn-success', 'text-white'));
                                horaBtn.classList.add('btn-success', 'text-white');
                            };

                            // Marcar la hora previamente seleccionada en verde
                            if (hora.horaInicio === horaSeleccionada) {
                                horaBtn.classList.add('btn-success', 'text-white');
                            }
                        }
                        horasContainer.appendChild(horaBtn);
                    });
                });
        }
    }

    // Cargar horas al iniciar si hay valores existentes
    window.onload = function () {
        cargarHorasDisponibles();
    };
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}