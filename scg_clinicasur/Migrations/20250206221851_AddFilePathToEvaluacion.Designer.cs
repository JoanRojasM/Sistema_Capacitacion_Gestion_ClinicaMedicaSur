// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scg_clinicasur.Data;

#nullable disable

namespace scg_clinicasur.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250206221851_AddFilePathToEvaluacion")]
    partial class AddFilePathToEvaluacion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("scg_clinicasur.Models.Alergia", b =>
                {
                    b.Property<int>("id_alergia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_alergia"));

                    b.Property<string>("nombre_alergia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id_alergia");

                    b.ToTable("Alergias");
                });

            modelBuilder.Entity("scg_clinicasur.Models.AntecedenteFamiliar", b =>
                {
                    b.Property<int>("IdAntecedente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_antecedente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAntecedente"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.HasKey("IdAntecedente");

                    b.HasIndex("IdPaciente");

                    b.ToTable("antecedentesfamiliares");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Capacitacion", b =>
                {
                    b.Property<int>("id_capacitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_capacitacion"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("duracion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id_capacitacion");

                    b.HasIndex("id_usuario");

                    b.ToTable("capacitacion");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cita");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_inicio");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int")
                        .HasColumnName("id_doctor");

                    b.Property<int>("IdEstadoCita")
                        .HasColumnType("int")
                        .HasColumnName("id_estado_cita");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.Property<string>("MotivoCita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motivo_cita");

                    b.HasKey("IdCita");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdEstadoCita");

                    b.HasIndex("IdPaciente");

                    b.ToTable("citas");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Contabilidad", b =>
                {
                    b.Property<int>("IdContabilidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contabilidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContabilidad"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("concepto");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("monto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdContabilidad");

                    b.ToTable("contabilidad");
                });

            modelBuilder.Entity("scg_clinicasur.Models.ContactoEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contacto_emergencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_contacto");

                    b.Property<string>("Relacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("relacion");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telefono_contacto");

                    b.HasKey("Id");

                    b.HasIndex("IdPaciente");

                    b.ToTable("contactosemergencia");
                });

            modelBuilder.Entity("scg_clinicasur.Models.DisponibilidadDoctor", b =>
                {
                    b.Property<int>("IdDisponibilidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_disponibilidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDisponibilidad"));

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("dia_semana");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time")
                        .HasColumnName("hora_fin");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("hora_inicio");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int")
                        .HasColumnName("id_doctor");

                    b.HasKey("IdDisponibilidad");

                    b.HasIndex("IdDoctor");

                    b.ToTable("disponibilidad_doctor");
                });

            modelBuilder.Entity("scg_clinicasur.Models.DoctorEspecialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_doctor_especialidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEspecialidad")
                        .HasColumnType("int")
                        .HasColumnName("id_especialidad");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecialidad");

                    b.HasIndex("IdUsuario");

                    b.ToTable("doctor_especialidades");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Especialidad", b =>
                {
                    b.Property<int>("IdEspecialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_especialidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecialidad"));

                    b.Property<string>("NombreEspecialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_especialidad");

                    b.HasKey("IdEspecialidad");

                    b.ToTable("especialidades");
                });

            modelBuilder.Entity("scg_clinicasur.Models.EstadoCita", b =>
                {
                    b.Property<int>("IdEstadoCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado_cita");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCita"));

                    b.Property<string>("EstadoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estado_nombre");

                    b.HasKey("IdEstadoCita");

                    b.ToTable("estado_citas");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Evaluacion", b =>
                {
                    b.Property<int>("id_evaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_evaluacion"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_path");

                    b.Property<int>("id_capacitacion")
                        .HasColumnType("int")
                        .HasColumnName("id_capacitacion");

                    b.Property<int?>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tiempo_prueba")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id_evaluacion");

                    b.HasIndex("id_capacitacion");

                    b.HasIndex("id_usuario");

                    b.ToTable("evaluacion");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Expediente", b =>
                {
                    b.Property<int>("idExpediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_expediente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idExpediente"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("descripcion");

                    b.Property<string>("diagnostico")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("diagnostico");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("idPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.Property<string>("nombrePaciente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre_paciente");

                    b.Property<string>("tratamientosPrevios")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("tratamientos_previos");

                    b.Property<DateTime>("ultimaConsulta")
                        .HasColumnType("datetime2")
                        .HasColumnName("ultima_consulta");

                    b.HasKey("idExpediente");

                    b.ToTable("Expedientes");
                });

            modelBuilder.Entity("scg_clinicasur.Models.HabitoVida", b =>
                {
                    b.Property<int>("IdHabito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_habito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHabito"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.HasKey("IdHabito");

                    b.HasIndex("IdPaciente");

                    b.ToTable("habitosvida");
                });

            modelBuilder.Entity("scg_clinicasur.Models.MedicamentoPrescrito", b =>
                {
                    b.Property<int>("IdMedicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_medicamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicamento"));

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dosis");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaPrescripcion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_prescripcion");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.Property<string>("NombreMedicamento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre_medicamento");

                    b.HasKey("IdMedicamento");

                    b.HasIndex("IdPaciente");

                    b.ToTable("medicamentosprescritos");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Notificacion", b =>
                {
                    b.Property<int>("id_notificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_notificacion"));

                    b.Property<DateTime>("fecha_envio")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_notificacion");

                    b.ToTable("notificacion");
                });

            modelBuilder.Entity("scg_clinicasur.Models.PacienteAlergia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pacientealergias");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro");

                    b.Property<int>("id_alergia")
                        .HasColumnType("int");

                    b.Property<int>("id_paciente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_alergia");

                    b.HasIndex("id_paciente");

                    b.ToTable("PacienteAlergias");
                });

            modelBuilder.Entity("scg_clinicasur.Models.RecursosAprendizaje", b =>
                {
                    b.Property<int>("id_recurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_recurso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_recurso"));

                    b.Property<string>("archivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("archivo");

                    b.Property<string>("enlace")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("enlace");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("id_capacitacion")
                        .HasColumnType("int")
                        .HasColumnName("id_capacitacion");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id_recurso");

                    b.HasIndex("id_capacitacion");

                    b.ToTable("recursos_aprendizaje");
                });

            modelBuilder.Entity("scg_clinicasur.Models.ResultadosLaboratorio", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_resultado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<byte[]>("ArchivoPDF")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("ArchivoPDF");

                    b.Property<DateTime>("FechaPrueba")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaPrueba");

                    b.Property<int>("IdExpediente")
                        .HasColumnType("int")
                        .HasColumnName("id_expediente");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.HasKey("IdResultado");

                    b.HasIndex("IdExpediente");

                    b.HasIndex("IdPaciente");

                    b.ToTable("resultadoslaboratorio");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Roles", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("nombre_rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_rol")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id_usuario");

                    b.HasIndex("id_rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("scg_clinicasur.Models.AntecedenteFamiliar", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Capacitacion", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Cita", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scg_clinicasur.Models.EstadoCita", "EstadoCita")
                        .WithMany()
                        .HasForeignKey("IdEstadoCita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("EstadoCita");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.ContactoEmergencia", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany("ContactosEmergencia")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.DisponibilidadDoctor", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("scg_clinicasur.Models.DoctorEspecialidad", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Especialidad", "Especialidad")
                        .WithMany("DoctoresEspecialidades")
                        .HasForeignKey("IdEspecialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scg_clinicasur.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Evaluacion", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Capacitacion", "Capacitacion")
                        .WithMany()
                        .HasForeignKey("id_capacitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scg_clinicasur.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario");

                    b.Navigation("Capacitacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("scg_clinicasur.Models.HabitoVida", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.MedicamentoPrescrito", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.PacienteAlergia", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Alergia", "Alergia")
                        .WithMany()
                        .HasForeignKey("id_alergia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany("PacienteAlergias")
                        .HasForeignKey("id_paciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alergia");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.RecursosAprendizaje", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Capacitacion", "Capacitacion")
                        .WithMany()
                        .HasForeignKey("id_capacitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");
                });

            modelBuilder.Entity("scg_clinicasur.Models.ResultadosLaboratorio", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Expediente", "Expediente")
                        .WithMany()
                        .HasForeignKey("IdExpediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scg_clinicasur.Models.Usuario", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expediente");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Usuario", b =>
                {
                    b.HasOne("scg_clinicasur.Models.Roles", "roles")
                        .WithMany()
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Especialidad", b =>
                {
                    b.Navigation("DoctoresEspecialidades");
                });

            modelBuilder.Entity("scg_clinicasur.Models.Usuario", b =>
                {
                    b.Navigation("ContactosEmergencia");

                    b.Navigation("PacienteAlergias");
                });
#pragma warning restore 612, 618
        }
    }
}
